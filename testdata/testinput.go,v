head	1.6;
access;
symbols;
locks
	arran:1.6; strict;
comment	@# @;


1.6
date	2022.03.23.02.22.51;	author arran;	state Exp;
branches;
next	1.5;

1.5
date	2022.03.23.02.22.34;	author arran;	state Exp;
branches;
next	1.4;

1.4
date	2022.03.23.02.22.03;	author arran;	state Exp;
branches;
next	1.3;

1.3
date	2022.03.23.02.21.35;	author arran;	state Exp;
branches;
next	1.2;

1.2
date	2022.03.23.02.20.39;	author arran;	state Exp;
branches;
next	1.1;

1.1
date	2022.03.23.02.18.09;	author arran;	state Exp;
branches;
next	;


desc
@This is a test file.
@


1.6
log
@Yeah, na.. I don't.
@
text
@package main

import (
	"github.com/mb-14/gomarkov"
	"fmt"
	"strings"
	"io/ioutil"
	"encoding/json"
)

func main() {
	//Create a chain of order 2
	chain := gomarkov.NewChain(2)

	//You can even generate new text based on an initial seed
	chain.Add(strings.Split("Mother should I build the wall?", " "))
	chain.Add(strings.Split("Mother should I run for President?", " "))
	chain.Add(strings.Split("Mother should I trust the government?", " "))
	chain.Add(strings.Split("Mother should I find my mind?", " "))
	next, _ := chain.Generate([]string{"should", "I"})
	fmt.Println(next)

	//The chain is JSON serializable
	jsonObj, _ := json.Marshal(chain)
	err := ioutil.WriteFile("model.json", jsonObj, 0644)
	if err != nil {
		fmt.Println(err)
	}
}
@


1.5
log
@I just like @@
@@
No I don't.
@
text
@d22 1
a22 2
@@
@@@@
@


1.4
log
@And mixed metaphore Pixes / Pink Floyd
@
text
@d22 2
a23 1

@


1.3
log
@Only care about pink floyd references
@
text
@d19 1
@


1.2
log
@New version
@
text
@a14 10
	//Feed in training data
	chain.Add(strings.Split("I want a cheese burger", " "))
	chain.Add(strings.Split("I want a chilled sprite", " "))
	chain.Add(strings.Split("I want to go to the movies", " "))

	//Get transition probability of a sequence
	prob, _ := chain.TransitionProbability("a", []string{"I", "want"})
	fmt.Println(prob)
	//Output: 0.6666666666666666

@


1.1
log
@Initial revision
@
text
@d3 7
a9 1
import "fmt"
d12 26
a37 1
	fmt.Println("HI")
@
